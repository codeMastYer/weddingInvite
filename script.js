// script.js
document.addEventListener('DOMContentLoaded', () => {
    const countdownEl = document.getElementById('countdown');
    // ’Ñ’•÷Ñ’•’∂’°’µ’°’Ø’°’∂ ’™’°’¥’Ø’•’ø’ù ’ø’°÷Ä’´’∂, ’°’¥’´’Ω (0‚Äì’´÷Å), ÷Ö÷Ä, ’™’°’¥’® etc.
    const weddingDate = new Date(2025, 7, 14, 0, 0, 0).getTime();

    const update = () => {
        const now = Date.now();
        const distance = weddingDate - now;

        if (distance <= 0) {
            document.querySelector("small").style.display = "none"
            countdownEl.innerHTML = "<p>’Ä’°÷Ä’Ω’°’∂’´÷Ñ’® ’Ø’°’µ’°÷Å’•’¨ ’ß, ’•÷Ä’ª’°’∂’Ø’∏÷Ç’©’µ’∏÷Ç’∂ ’∂’∏÷Ä’°’∫’Ω’°’Ø’∂’•÷Ä’´’∂!üíï</p>";
            clearInterval(interval);
            return;
        }

        const day = 1000 * 60 * 60 * 24;
        const hour = 1000 * 60 * 60;
        const minute = 1000 * 60;
        const days = Math.floor(distance / day);
        const hours = Math.floor((distance % day) / hour);
        const minutes = Math.floor((distance % hour) / minute);
        const seconds = Math.floor((distance % minute) / 1000);

        countdownEl.innerHTML =
            `<div>${days}  <br> <span>÷Ö÷Ä</span></div>` +
            `<div>${hours.toString().padStart(2, '0')} <br> <span>’™’°’¥</span> </div>` +
            `<div>${minutes.toString().padStart(2, '0')} <br> <span>÷Ä’∏’∫’•</span></div>` +
            `<div>${seconds.toString().padStart(2, '0')}  <br> <span>’æ’°’µ÷Ä’Ø’µ’°’∂</span></div>`;
    };

    update();                              // ’°’º’°’ª’´’∂ ’æ’°’µ÷Ä’Ø’µ’°’∂’´’∂ ÷Å’∏÷Ç÷Å’°’§÷Ä’∏÷Ç’¥
    const interval = setInterval(update, 1000);
});

document.addEventListener('DOMContentLoaded', () => {
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(e => {
            if (e.isIntersecting) {
                e.target.classList.add('in-view');
            } else {
                e.target.classList.remove('in-view');
            }
        });
    }, {threshold: 0.1});

    document.querySelectorAll('.imgDiv').forEach((el, idx) => {
        el.classList.add(idx === 0 ? 'slide-left' : 'slide-right');
        observer.observe(el);
    });
});


document.addEventListener('DOMContentLoaded', () => {
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('in-view');
            } else {
                entry.target.classList.remove('in-view');
            }
        });
    }, {threshold: 0.1});

    // ‘±’≤’µ’∏÷Ç’Ω’°’Ø ’¢’∏’¨’∏÷Ä fade-’°’∂’´’¥’°÷Å’´’°’µ’´ ’•’∂’©’°’Ø’° ’ø’°÷Ä÷Ä’•÷Ä’´ ’∞’°’¥’°÷Ä
    document.querySelectorAll('.imgDiv, .topDiv, .bottomDiv').forEach(el => {
        el.classList.add('fade-element');
        observer.observe(el);
    });
});


document.addEventListener('DOMContentLoaded', () => {
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('in-view');
            } else {
                entry.target.classList.remove('in-view');
            }
        });
    }, {threshold: 0.1});

    document.querySelectorAll('.main > *').forEach(el => {
        observer.observe(el);
    });
});

document.addEventListener('DOMContentLoaded', () => {
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('in-view');
            } else {
                entry.target.classList.remove('in-view');
            }
        });
    }, {threshold: 0.1});

    document.querySelectorAll('.imgDiv').forEach(el => {
        observer.observe(el);
    });
});


emailjs.init({publicKey: "E-IIOcylP9DxbzSfy"});

document.getElementById("rsvp-form").addEventListener("submit", function (e) {
    e.preventDefault();
    emailjs.sendForm('service_6w3jpji', 'template_kpnq54i', this)
        .then(response => {
            const successMessage = document.createElement('div');
            successMessage.id = 'success-message';
            successMessage.innerHTML = '’á’∂’∏÷Ä’∞’°’Ø’°’¨’∏÷Ç’©’µ’∏÷Ç’∂, <br> ’ø’æ’µ’°’¨’∂’•÷Ä’® ’∏÷Ç’≤’°÷Ä’Ø’æ’°’Æ ’•’∂÷âüíû';
            successMessage.style.position = 'fixed';
            successMessage.style.top = '50%';
            successMessage.style.left = '50%';
            successMessage.style.transform = 'translate(-50%, -50%)';
            successMessage.style.padding = '20px';
            successMessage.style.backgroundColor = "rgba(0, 0, 0, 0.8)";
            successMessage.style.color = 'white';
            successMessage.style.borderRadius = '5px';
            successMessage.style.fontSize = '25px';
            successMessage.style.textAlign = 'center';
            successMessage.style.zIndex = '9999';
            successMessage.style.letterSpacing = '1px';
            // ‘±’æ’•’¨’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ successMessage ’ø’°÷Ä÷Ä’® ’ß’ª’´ ’¥’•’ª
            document.body.appendChild(successMessage);

            // ’Ä’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’® ÷Å’∏÷Ç’µ÷Å ’ø’°’¨’∏÷Ç ’∞’°’¥’°÷Ä
            successMessage.classList.remove('hidden');

            // ’Ä’°’≤’∏÷Ä’§’°’£÷Ä’∏÷Ç’©’µ’∏÷Ç’∂’® ’©’°÷Ñ÷Å’∂’•’¨’∏÷Ç ’∞’°’¥’°÷Ä 5 ’æ’°’µ÷Ä’Ø’µ’°’∂ ’°’∂÷Å
            setTimeout(() => {
                successMessage.classList.add('hidden');
                // ’Ä’•’º’°÷Å’∂’∏÷Ç’¥ ’•’∂÷Ñ successMessage ’ø’°÷Ä÷Ä’® ’ß’ª’´÷Å
                document.body.removeChild(successMessage);
            }, 3000);

            this.reset();
        })
        .catch(error => {
            console.log(error)
        });

});
const music = document.getElementById("wedding-song")

$(document).on('click', function(){
    document.getElementById("wedding-song").play();
});


